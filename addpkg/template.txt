package token_register

import (
	token "pkgPath"

	pusers "gno.land/p/demo/users"

	cp "gno.land/r/gnoswap/v2/community_pool"
	gs "gno.land/r/gnoswap/v2/gov/staker"
	lp "gno.land/r/gnoswap/v2/launchpad"
	pl "gno.land/r/gnoswap/v2/pool"
	pf "gno.land/r/gnoswap/v2/protocol_fee"
	rr "gno.land/r/gnoswap/v2/router"
	sr "gno.land/r/gnoswap/v2/staker"
)

type NewToken struct{}

func (NewToken) Transfer() func(to pusers.AddressOrName, amount uint64) {
	return token.Transfer
}

func (NewToken) TransferFrom() func(from, to pusers.AddressOrName, amount uint64) {
	return token.TransferFrom
}

func (NewToken) BalanceOf() func(owner pusers.AddressOrName) uint64 {
	return token.BalanceOf
}

func (NewToken) Approve() func(spender pusers.AddressOrName, amount uint64) {
	return token.Approve
}

func init() {
	pl.RegisterGRC20Interface("pkgPath", NewToken{})
	sr.RegisterGRC20Interface("pkgPath", NewToken{})
	rr.RegisterGRC20Interface("pkgPath", NewToken{})
	pf.RegisterGRC20Interface("pkgPath", NewToken{})
	cp.RegisterGRC20Interface("pkgPath", NewToken{})
	gs.RegisterGRC20Interface("pkgPath", NewToken{})
	lp.RegisterGRC20Interface("pkgPath", NewToken{})
}
